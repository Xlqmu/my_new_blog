---
import { type CollectionEntry, getCollection, render } from "astro:content";
import FormattedDate from "../../../components/FormattedDate.astro";
import { SITE_TITLE } from "../../../consts";
import BaseLayout from "../../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
    const diaryEntries = await getCollection("diary");
    const annualEntries = diaryEntries.filter((entry) =>
        entry.id.startsWith("annual/"),
    );
    return annualEntries.map((entry) => ({
        params: { slug: entry.id.replace("annual/", "") },
        props: entry,
    }));
}

type Props = CollectionEntry<"diary">;

const entry = Astro.props;
const { Content } = await render(entry);
---

<BaseLayout
    title={`${entry.data.title} | ${SITE_TITLE}`}
    description={entry.data.description || "å¹´åº¦æ€»ç»“"}
>
    <main class="container mx-auto px-4 py-12">
        <article class="max-w-4xl mx-auto">
            <div class="mb-8">
                <nav class="text-sm breadcrumbs mb-4">
                    <ul
                        class="flex items-center gap-2 text-gray-600 dark:text-gray-400"
                    >
                        <li>
                            <a href="/" class="hover:text-purple-500">é¦–é¡µ</a>
                        </li>
                        <span>/</span>
                        <li>
                            <a href="/diary" class="hover:text-purple-500"
                                >æ—¥è®°</a>
                        </li>
                        <span>/</span>
                        <li>
                            <a
                                href="/diary/annual"
                                class="hover:text-purple-500">å¹´åº¦æ—¥è®°</a>
                        </li>
                        <span>/</span>
                        <li class="text-gray-400">{entry.data.title}</li>
                    </ul>
                </nav>

                <div
                    class="bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 p-8 rounded-xl mb-8"
                >
                    <h1
                        class="text-4xl font-bold mb-4 text-gray-900 dark:text-white"
                    >
                        {entry.data.title}
                    </h1>

                    <div
                        class="flex items-center gap-6 text-sm text-gray-600 dark:text-gray-400 mb-6"
                    >
                        <div class="flex items-center gap-2">
                            <svg
                                class="w-4 h-4"
                                fill="none"
                                stroke="currentColor"
                                viewBox="0 0 24 24"
                            >
                                <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                                ></path>
                            </svg>
                            <FormattedDate date={entry.data.pubDate} />
                        </div>
                        {
                            entry.data.mood && (
                                <div class="flex items-center gap-2">
                                    <span class="text-purple-600 dark:text-purple-400">
                                        ðŸŒŸ {entry.data.mood}
                                    </span>
                                </div>
                            )
                        }
                        {
                            entry.data.location && (
                                <div class="flex items-center gap-2">
                                    <svg
                                        class="w-4 h-4"
                                        fill="none"
                                        stroke="currentColor"
                                        viewBox="0 0 24 24"
                                    >
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
                                        />
                                    </svg>
                                    <span>{entry.data.location}</span>
                                </div>
                            )
                        }
                    </div>

                    {
                        entry.data.description && (
                            <p class="text-lg text-gray-700 dark:text-gray-300 leading-relaxed">
                                {entry.data.description}
                            </p>
                        )
                    }
                </div>
            </div>

            <div
                class="prose prose-lg max-w-none dark:prose-invert prose-headings:text-gray-900 dark:prose-headings:text-white prose-p:text-gray-700 dark:prose-p:text-gray-300 prose-a:text-purple-600 dark:prose-a:text-purple-400 prose-strong:text-gray-900 dark:prose-strong:text-white"
            >
                <Content />
            </div>

            {
                entry.data.tags && entry.data.tags.length > 0 && (
                    <div class="mt-8 pt-6 border-t border-gray-200 dark:border-gray-700">
                        <h3 class="text-sm font-medium text-gray-900 dark:text-white mb-3">
                            æ ‡ç­¾
                        </h3>
                        <div class="flex gap-3 flex-wrap">
                            {entry.data.tags.map((tag: string) => (
                                <span class="text-sm bg-gradient-to-r from-purple-100 to-pink-100 dark:from-purple-800 dark:to-pink-800 text-purple-800 dark:text-purple-200 px-4 py-2 rounded-full font-medium">
                                    # {tag}
                                </span>
                            ))}
                        </div>
                    </div>
                )
            }

            <div
                class="mt-12 pt-6 border-t border-gray-200 dark:border-gray-700"
            >
                <nav class="flex justify-between">
                    <a
                        href="/diary/annual"
                        class="inline-flex items-center gap-2 text-purple-600 dark:text-purple-400 hover:text-purple-800 dark:hover:text-purple-300 transition-colors"
                    >
                        <svg
                            class="w-4 h-4"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M15 19l-7-7 7-7"></path>
                        </svg>
                        è¿”å›žå¹´åº¦æ€»ç»“åˆ—è¡¨
                    </a>
                </nav>
            </div>
        </article>
    </main>
</BaseLayout>
