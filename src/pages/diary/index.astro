---
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../../consts";

const diaryEntries = await getCollection("diary");
const sortedDiary = diaryEntries.sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<BaseLayout title={`日记 | ${SITE_TITLE}`} description={SITE_DESCRIPTION}>
    <main class="container mx-auto px-4 py-12">
        <div class="max-w-4xl mx-auto">
            <h1
                class="text-3xl font-bold mb-6 text-gray-800 dark:text-gray-100"
            >
                日记
            </h1>
            <p class="text-lg mb-8 text-gray-700 dark:text-gray-300">
                这里记录我的日常想法、学习和生活点滴。
            </p>

            <!-- 日记分类标签 -->
            <div class="flex flex-wrap gap-3 mb-8">
                <button
                    onclick="filterDiaryByType('all')"
                    id="filter-all"
                    class="px-4 py-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition filter-btn"
                >
                    全部
                </button>
                <button
                    onclick="filterDiaryByType('timeline')"
                    id="filter-timeline"
                    class="px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full hover:bg-gray-300 dark:hover:bg-gray-600 transition filter-btn"
                >
                    时间线
                </button>
                <button
                    onclick="filterDiaryByType('daily')"
                    id="filter-daily"
                    class="px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full hover:bg-gray-300 dark:hover:bg-gray-600 transition filter-btn"
                >
                    今日
                </button>
                <button
                    onclick="filterDiaryByType('weekly')"
                    id="filter-weekly"
                    class="px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full hover:bg-gray-300 dark:hover:bg-gray-600 transition filter-btn"
                >
                    本周
                </button>
                <button
                    onclick="filterDiaryByType('monthly')"
                    id="filter-monthly"
                    class="px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full hover:bg-gray-300 dark:hover:bg-gray-600 transition filter-btn"
                >
                    本月
                </button>
                <button
                    onclick="filterDiaryByType('annual')"
                    id="filter-annual"
                    class="px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full hover:bg-gray-300 dark:hover:bg-gray-600 transition filter-btn"
                >
                    本年度
                </button>
            </div>

            <!-- 时间线视图 (默认) -->
            <div class="space-y-8" id="diary-entries">
                {
                    sortedDiary.map((entry) => (
                        <div
                            class="relative pl-8 pb-8 border-l-2 border-blue-500 dark:border-blue-400 diary-entry"
                            data-date={entry.data.pubDate.toISOString()}
                        >
                            <div class="absolute left-[-8px] bg-blue-500 dark:bg-blue-400 w-4 h-4 rounded-full" />
                            <div class="bg-white dark:bg-gray-800 p-5 rounded-lg shadow-md">
                                <div class="flex justify-between items-center mb-3">
                                    <h3 class="text-xl font-bold dark:text-white">
                                        <a
                                            href={`/diary/${entry.id}`}
                                            class="hover:text-blue-600 dark:hover:text-blue-400 transition"
                                        >
                                            {entry.data.title}
                                        </a>
                                    </h3>
                                    <div class="text-sm text-gray-500 dark:text-gray-400 text-right">
                                        <FormattedDate
                                            date={entry.data.pubDate}
                                        />
                                        {entry.data.mood && (
                                            <div class="mt-1">
                                                心情：{entry.data.mood}
                                            </div>
                                        )}
                                    </div>
                                </div>
                                <p class="text-gray-700 dark:text-gray-300 mb-4">
                                    {entry.data.description}
                                </p>
                                <div class="flex justify-between items-center">
                                    <div class="flex flex-wrap gap-2">
                                        {entry.data.tags?.map((tag) => (
                                            <span class="px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded">
                                                {tag}
                                            </span>
                                        ))}
                                    </div>
                                    {(entry.data.weather ||
                                        entry.data.location) && (
                                        <div class="text-xs text-gray-500 dark:text-gray-400">
                                            {entry.data.weather && (
                                                <span>
                                                    {entry.data.weather}
                                                </span>
                                            )}
                                            {entry.data.location && (
                                                <span>
                                                    {" "}
                                                    · {entry.data.location}
                                                </span>
                                            )}
                                        </div>
                                    )}
                                </div>
                            </div>
                        </div>
                    ))
                }
            </div>

            <!-- 分页 -->
            <div class="flex justify-center items-center space-x-2 mt-12">
                <a
                    href="#"
                    class="px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded hover:bg-gray-300 dark:hover:bg-gray-600 transition"
                    >上一页</a
                >
                <span class="px-4 py-2 bg-blue-500 text-white rounded">1</span>
                <a
                    href="#"
                    class="px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded hover:bg-gray-300 dark:hover:bg-gray-600 transition"
                    >2</a
                >
                <a
                    href="#"
                    class="px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded hover:bg-gray-300 dark:hover:bg-gray-600 transition"
                    >3</a
                >
                <span class="px-2">...</span>
                <a
                    href="#"
                    class="px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded hover:bg-gray-300 dark:hover:bg-gray-600 transition"
                    >10</a
                >
                <a
                    href="#"
                    class="px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded hover:bg-gray-300 dark:hover:bg-gray-600 transition"
                    >下一页</a
                >
            </div>
        </div>
    </main>
</BaseLayout>

<script is:inline>
    function filterDiaryByType(type) {
        const entries = document.querySelectorAll(".diary-entry");
        const buttons = document.querySelectorAll(".filter-btn"); // 更新按钮样式
        buttons.forEach((btn) => {
            btn.classList.remove("bg-blue-500", "text-white");
            btn.classList.add(
                "bg-gray-200",
                "dark:bg-gray-700",
                "text-gray-800",
                "dark:text-gray-200",
            );
        });

        // 高亮当前选中的按钮
        const activeButton = document.getElementById(`filter-${type}`);
        if (activeButton) {
            activeButton.classList.remove(
                "bg-gray-200",
                "dark:bg-gray-700",
                "text-gray-800",
                "dark:text-gray-200",
            );
            activeButton.classList.add("bg-blue-500", "text-white");
        }

        // 过滤条目
        if (type === "all") {
            entries.forEach((entry) => {
                entry.style.display = "block";
            });
        } else {
            // 根据日期过滤日记条目
            const now = new Date();

            entries.forEach((entry) => {
                const entryDate = new Date(entry.getAttribute("data-date"));
                let shouldShow = false;

                switch (type) {
                    case "timeline":
                        shouldShow = true; // 时间线显示全部
                        break;
                    case "daily":
                        shouldShow =
                            entryDate.toDateString() === now.toDateString();
                        break;
                    case "weekly":
                        const weekAgo = new Date(
                            now.getTime() - 7 * 24 * 60 * 60 * 1000,
                        );
                        shouldShow = entryDate >= weekAgo && entryDate <= now;
                        break;
                    case "monthly":
                        shouldShow =
                            entryDate.getMonth() === now.getMonth() &&
                            entryDate.getFullYear() === now.getFullYear();
                        break;
                    case "annual":
                        shouldShow =
                            entryDate.getFullYear() === now.getFullYear();
                        break;
                }

                entry.style.display = shouldShow ? "block" : "none";
            });
        }
    }
</script>
