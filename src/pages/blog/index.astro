---
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import Pagination from "../../components/Pagination.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { paginate } from "../../utils/pagination.ts";
import { SITE_DESCRIPTION } from "../../consts";

const posts = (await getCollection("blog")).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const { items: paginatedPosts, pagination } = paginate(posts, 1, 5);

// 获取所有分类
const allCategories = [
	...new Set(posts.map((post) => post.data.category || "未分类")),
];
---

<BaseLayout title="博客文章" description={SITE_DESCRIPTION}>
	<main>
		<section class="blog-hero py-16 text-center">
			<div class="container mx-auto px-4">
				<h1 class="text-4xl font-bold mb-4">博客文章</h1>
				<p
					class="text-xl max-w-2xl mx-auto text-gray-600 dark:text-gray-300"
				>
					我的所有博客文章合集
				</p>
			</div>
		</section>

		<section class="blog-content py-10">
			<div class="container mx-auto px-4">
				<!-- 分类筛选 -->
				<div
					class="category-filter mb-8 flex flex-wrap justify-center gap-4"
				>
					<a
						href="/blog"
						class="category-link active"
						data-category="all">全部</a
					>
					{
						allCategories.map((category) => (
							<a
								href="#"
								class="category-link"
								data-category={category}
							>
								{category}
							</a>
						))
					}
				</div>

				<!-- 文章列表 - 每行5个 -->
				<div
					class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6"
				>
					{
						paginatedPosts.map((post) => (
							<article
								class="post-card group"
								data-category={post.data.category || "未分类"}
							>
								<a
									href={`/blog/${post.id}/`}
									class="block h-full"
								>
									{post.data.heroImage && (
										<div class="aspect-video overflow-hidden rounded-t-lg">
											<img
												src={post.data.heroImage.src}
												alt={post.data.title}
												class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
											/>
										</div>
									)}
									<div class="p-4 flex flex-col h-full">
										<div class="post-meta mb-2 text-xs text-gray-500 dark:text-gray-400">
											<span class="category bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded text-xs">
												{post.data.category || "未分类"}
											</span>
										</div>
										<h2 class="title text-lg font-bold mb-2 line-clamp-2 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
											{post.data.title}
										</h2>
										<p class="text-gray-600 dark:text-gray-300 text-sm mb-3 line-clamp-3 flex-grow">
											{post.data.description}
										</p>
										<div class="mt-auto">
											<FormattedDate
												date={post.data.pubDate}
											/>
										</div>
									</div>
								</a>
							</article>
						))
					}
				</div>

				<!-- 如果没有文章 -->
				{
					paginatedPosts.length === 0 && (
						<div class="text-center py-12">
							<div class="text-6xl mb-4">📝</div>
							<h3 class="text-xl font-semibold mb-2">暂无文章</h3>
							<p class="text-gray-600 dark:text-gray-400">
								还没有发布任何博客文章
							</p>
						</div>
					)
				}

				<!-- 分页组件 -->
				{
					pagination.totalPages > 1 && (
						<Pagination pagination={pagination} basePath="/blog" />
					)
				}
			</div>
		</section>
	</main>
	<style>
		.blog-hero {
			background: linear-gradient(
				to bottom,
				rgba(var(--gray-light), 0.8),
				rgba(255, 255, 255, 0.8)
			);
			padding: 5rem 0;
		}
		.category-link {
			padding: 0.5rem 1.5rem;
			border-radius: 2rem;
			background-color: white;
			color: rgb(var(--gray-dark));
			text-decoration: none;
			box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
			transition: all 0.2s ease;
		}
		.category-link:hover,
		.category-link.active {
			background-color: var(--accent);
			color: white;
		}
		.post-card {
			background-color: white;
			border-radius: 0.5rem;
			overflow: hidden;
			box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
			transition: all 0.3s ease;
		}
		.post-card:hover {
			transform: translateY(-5px);
			box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
		}
	</style>

	<script>
		// 分类筛选功能
		document.addEventListener("DOMContentLoaded", () => {
			const categoryLinks = document.querySelectorAll(".category-link");
			const postCards = document.querySelectorAll(".post-card");

			categoryLinks.forEach((link: Element) => {
				link.addEventListener("click", (e: Event) => {
					e.preventDefault();

					// 移除所有激活状态
					categoryLinks.forEach((l: Element) =>
						l.classList.remove("active"),
					);
					// 添加当前激活状态
					link.classList.add("active");

					const selectedCategory = link.getAttribute("data-category");

					postCards.forEach((card: Element) => {
						if (
							selectedCategory === "all" ||
							card.getAttribute("data-category") ===
								selectedCategory
						) {
							(card as HTMLElement).style.display = "block";
						} else {
							(card as HTMLElement).style.display = "none";
						}
					});
				});
			});
		});
	</script>
</BaseLayout>
